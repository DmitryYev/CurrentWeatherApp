[{"C:\\Learning\\Projects\\weather_app\\src\\index.js":"1","C:\\Learning\\Projects\\weather_app\\src\\App.js":"2","C:\\Learning\\Projects\\weather_app\\src\\components\\Search\\Search.jsx":"3","C:\\Learning\\Projects\\weather_app\\src\\components\\Time\\Time.jsx":"4","C:\\Learning\\Projects\\weather_app\\src\\components\\WeatherInfo\\WeatherInfo.jsx":"5"},{"size":221,"mtime":1610635898904,"results":"6","hashOfConfig":"7"},{"size":573,"mtime":1612096459601,"results":"8","hashOfConfig":"7"},{"size":1530,"mtime":1612100932529,"results":"9","hashOfConfig":"7"},{"size":1070,"mtime":1611939271485,"results":"10","hashOfConfig":"7"},{"size":1738,"mtime":1612100829135,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1g0qo0e",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Learning\\Projects\\weather_app\\src\\index.js",[],["24","25"],"C:\\Learning\\Projects\\weather_app\\src\\App.js",[],"C:\\Learning\\Projects\\weather_app\\src\\components\\Search\\Search.jsx",[],"C:\\Learning\\Projects\\weather_app\\src\\components\\Time\\Time.jsx",["26"],"import React, { useState, useEffect } from 'react';\r\nimport './time.css';\r\n\r\nconst Time = ({ className }) => {\r\n    const timeOptions = { hour: '2-digit', minute: '2-digit' };\r\n    const dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    const newDate = new Date();\r\n\r\n    const [time, setTime] = useState(newDate.toLocaleTimeString([], timeOptions));\r\n    const [date, setDate] = useState(newDate.toLocaleDateString('en-GB', dateOptions));\r\n\r\n    useEffect(() => {\r\n        const timeInterval = setInterval(() => {\r\n            const date = new Date();\r\n            setTime(date.toLocaleTimeString([], timeOptions));\r\n        }, 5000)\r\n        return () => clearInterval(timeInterval)\r\n    });\r\n\r\n    useEffect(() => {\r\n        const date = new Date();\r\n        setDate(date.toLocaleDateString('en-GB', dateOptions));\r\n    }, [time])\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"date\">{date}</div>\r\n            <div className=\"time\">{time}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Time;","C:\\Learning\\Projects\\weather_app\\src\\components\\WeatherInfo\\WeatherInfo.jsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":23,"column":8,"nodeType":"33","endLine":23,"endColumn":14,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dateOptions'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [dateOptions, time]",{"range":"40","text":"41"},[864,870],"[dateOptions, time]"]